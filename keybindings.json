// Place your key bindings in this file to override the defaults
[
    // Tasks
    {"key": "alt+e",        "command": "workbench.action.tasks.runTask", "args": "Build & Run"},
    {"key": "shift+alt+e",  "command": "workbench.action.tasks.runTask", "args": "Build"      },
    {"key": "ctrl+alt+e",   "command": "workbench.action.tasks.runTask", "args": "Run"        },

    // Surround with
    {"key":       "shift+9", "command": "editor.action.insertSnippet", "args": {"snippet": "$0($TM_SELECTED_TEXT)"  }, "when": "editorTextFocus && editorHasSelection"},
    {"key":       "shift+0", "command": "editor.action.insertSnippet", "args": {"snippet":   "($TM_SELECTED_TEXT)$0"}, "when": "editorTextFocus && editorHasSelection"},
    {"key": "alt+` shift+[", "command": "editor.action.insertSnippet", "args": {"snippet": "$0{$TM_SELECTED_TEXT}"  }, "when": "editorTextFocus && editorHasSelection"},
    {"key": "alt+` shift+]", "command": "editor.action.insertSnippet", "args": {"snippet":   "{$TM_SELECTED_TEXT}$0"}, "when": "editorTextFocus && editorHasSelection"},
    {"key":       "["      , "command": "editor.action.insertSnippet", "args": {"snippet": "$0[$TM_SELECTED_TEXT]"  }, "when": "editorTextFocus && editorHasSelection"},
    {"key":       "]"      , "command": "editor.action.insertSnippet", "args": {"snippet":   "[$TM_SELECTED_TEXT]$0"}, "when": "editorTextFocus && editorHasSelection"},
    {"key":       "shift+,", "command": "editor.action.insertSnippet", "args": {"snippet": "$0<$TM_SELECTED_TEXT>"  }, "when": "editorTextFocus && editorHasSelection"},
    {"key":       "shift+.", "command": "editor.action.insertSnippet", "args": {"snippet":   "<$TM_SELECTED_TEXT>$0"}, "when": "editorTextFocus && editorHasSelection"},

    {"key": "alt+` shift+9", "command": "editor.action.insertSnippet", "args": {"snippet": "$0(\n\t$TM_SELECTED_TEXT\n)"  }, "when": "editorTextFocus && editorHasSelection"},
    {"key": "alt+` shift+0", "command": "editor.action.insertSnippet", "args": {"snippet":   "(\n\t$TM_SELECTED_TEXT\n)$0"}, "when": "editorTextFocus && editorHasSelection"},
    {"key":       "shift+[", "command": "editor.action.insertSnippet", "args": {"snippet": "$0{\n\t$TM_SELECTED_TEXT\n}"  }, "when": "editorTextFocus && editorHasSelection"},
    {"key":       "shift+]", "command": "editor.action.insertSnippet", "args": {"snippet":   "{\n\t$TM_SELECTED_TEXT\n}$0"}, "when": "editorTextFocus && editorHasSelection"},
    {"key": "alt+` ["      , "command": "editor.action.insertSnippet", "args": {"snippet": "$0[\n\t$TM_SELECTED_TEXT\n]"  }, "when": "editorTextFocus && editorHasSelection"},
    {"key": "alt+` ]"      , "command": "editor.action.insertSnippet", "args": {"snippet":   "[\n\t$TM_SELECTED_TEXT\n]$0"}, "when": "editorTextFocus && editorHasSelection"},
    {"key": "alt+` shift+,", "command": "editor.action.insertSnippet", "args": {"snippet": "$0<\n\t$TM_SELECTED_TEXT\n>"  }, "when": "editorTextFocus && editorHasSelection"},
    {"key": "alt+` shift+.", "command": "editor.action.insertSnippet", "args": {"snippet":   "<\n\t$TM_SELECTED_TEXT\n>$0"}, "when": "editorTextFocus && editorHasSelection"},

    // Macros
    {"key": "end", "command": "macros.close_param_hints_end", "when": "parameterHintsVisible && textInputFocus"},
    {"key": "end", "command": "macros.close_suggestions_end", "when": "suggestWidgetVisible && textInputFocus"},
    {"key": "alt+backspace", "command": "macros.delete_brackets"},
    {"key": "ctrl+shift+0", "command": "macros.make_member_initializer", "when": "editorTextFocus && !editorHasSelection"},
    {"key": "alt+\\", "command": "editor.action.insertSnippet", "args": {"snippet": "${0: $TM_SELECTED_TEXT }"}, "when": "editorTextFocus && editorHasSelection"},
    {"key": "alt+\\", "command": "editor.action.insertSnippet", "args": {"snippet": " $0 "                    }, "when": "editorTextFocus && !editorHasSelection"},

    // The rest
    { // Custom
        "key": "ctrl+e",
        "command": "editor.action.addSelectionToNextFindMatch",
        "when": "editorFocus"
    },
    { // Remove default shortcut
        "key": "ctrl+d",
        "command": "-editor.action.addSelectionToNextFindMatch",
    },
    { // Remove competing shortcut (note that ctrl+p does the same thing)
        "key": "ctrl+e",
        "command": "-workbench.action.quickOpen"
    },

    { // Custom
        "key": "alt+s",
        "command": "editor.action.addCommentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    { // Remove default shortcut
        "key": "ctrl+k ctrl+c",
        "command": "-editor.action.addCommentLine",
    },

    { // Custom
        "key": "alt+a",
        "command": "editor.action.removeCommentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    { // Remove default shortcut
        "key": "ctrl+k ctrl+u",
        "command": "-editor.action.removeCommentLine",
    },

    { // Custom
        "key": "shift+alt+q",
        "command": "editor.foldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    { // Remove default shortcut
        "key": "ctrl+k ctrl+0",
        "command": "-editor.foldAll",
    },

    { // Custom
        "key": "shift+alt+w",
        "command": "editor.unfoldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    { // Remove default shortcut
        "key": "ctrl+k ctrl+j",
        "command": "-editor.unfoldAll",
    },

    { // Custom
        "key": "alt+z",
        "command": "toggleFindCaseSensitive",
        "when": "editorFocus"
    },
    { // Remove default shortcut
        "key": "alt+c",
        "command": "-toggleFindCaseSensitive",
    },
    { // Remove competing shortcut
        "key": "alt+z",
        "command": "-editor.action.toggleWordWrap"
    },

    { // Custom
        "key": "alt+z",
        "command": "toggleSearchCaseSensitive",
        "when": "searchViewletFocus && searchViewletVisible && !fileMatchOrFolderMatchFocus"
    },
    { // Remove default shortcut
        "key": "alt+c",
        "command": "-toggleSearchCaseSensitive",
    },

    { // Custom
        "key": "alt+z",
        "command": "workbench.action.terminal.toggleFindCaseSensitive",
        "when": "terminalFindWidgetFocused"
    },
    { // Remove default shortcut
        "key": "alt+c",
        "command": "-workbench.action.terminal.toggleFindCaseSensitive",
    },

    { // Custom
        "key": "alt+x",
        "command": "toggleFindWholeWord",
        "when": "editorFocus"
    },
    { // Remove default shortcut
        "key": "alt+w",
        "command": "-toggleFindWholeWord",
    },

    { // Custom
        "key": "alt+x",
        "command": "toggleSearchWholeWord",
        "when": "searchViewletFocus && searchViewletVisible"
    },
    { // Remove default shortcut
        "key": "alt+w",
        "command": "-toggleSearchWholeWord",
    },

    { // Custom
        "key": "alt+x",
        "command": "workbench.action.terminal.toggleFindWholeWord",
        "when": "terminalFindWidgetFocused"
    },
    { // Remove default shortcut
        "key": "alt+w",
        "command": "-workbench.action.terminal.toggleFindWholeWord",
    },

    { // Custom
        "key": "alt+c",
        "command": "toggleFindRegex",
        "when": "editorFocus"
    },
    { // Remove default shortcut
        "key": "alt+r",
        "command": "-toggleFindRegex",
    },

    { // Custom
        "key": "alt+c",
        "command": "toggleSearchRegex",
        "when": "searchViewletFocus && searchViewletVisible"
    },
    { // Remove default shortcut
        "key": "alt+r",
        "command": "-toggleSearchRegex",
    },

    { // Custom
        "key": "alt+c",
        "command": "workbench.action.terminal.toggleFindRegex",
        "when": "terminalFindWidgetFocused"
    },
    { // Remove default shortcut
        "key": "alt+r",
        "command": "-workbench.action.terminal.toggleFindRegex",
    },

    { // Custom
        "key": "ctrl+shift+e",
        "command": "editor.action.moveSelectionToNextFindMatch",
        "when": "editorFocus"
    },
    { // Remove default shortcut
        "key": "ctrl+k ctrl+d",
        "command": "-editor.action.moveSelectionToNextFindMatch",
    },

    { // Custom
        "key": "alt+` 1",
        "command": "workbench.view.explorer"
    },
    { // Remove default shortcut
        "key": "ctrl+shift+e",
        "command": "-workbench.view.explorer"
    },

    { // Custom
        "key": "alt+` 2",
        "command": "workbench.view.search",
        "when": "!searchViewletVisible"
    },
    { // Remove default shortcut
        "key": "ctrl+shift+f",
        "command": "-workbench.view.search",
    },

    { // Custom
        "key": "alt+` 3",
        "command": "workbench.view.scm"
    },
    { // Remove default shortcut
        "key": "ctrl+shift+g",
        "command": "-workbench.view.scm"
    },

    { // Custom
        "key": "alt+` 4",
        "command": "workbench.view.debug"
    },
    { // Remove default shortcut
        "key": "ctrl+shift+d",
        "command": "-workbench.view.debug"
    },

    { // Custom
        "key": "alt+` 5",
        "command": "workbench.view.extensions"
    },
    { // Remove default shortcut
        "key": "ctrl+shift+x",
        "command": "-workbench.view.extensions"
    },

    { // Custom
        "key": "alt+` escape",
        "command": "workbench.action.togglePanel"
    },
    { // Remove default shortcut
        "key": "ctrl+j",
        "command": "-workbench.action.togglePanel"
    },

    { // Custom
        "key": "alt+` `",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    { // Remove default shortcut
        "key": "ctrl+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },

    { // Custom
        "key": "alt+q",
        "command": "editor.foldRecursively",
        "when": "editorTextFocus && foldingEnabled"
    },
    { // Remove default shortcut
        "key": "ctrl+k ctrl+[",
        "command": "-editor.foldRecursively",
    },

    { // Custom
        "key": "alt+w",
        "command": "editor.unfoldRecursively",
        "when": "editorTextFocus && foldingEnabled"
    },
    { // Remove default shortcut
        "key": "ctrl+k ctrl+]",
        "command": "-editor.unfoldRecursively",
    },

    { // Custom
        "key": "ctrl+shift+r",
        "command": "workbench.action.reloadWindow"
    },
    { // Remove default shortcut
        "key": "ctrl+r",
        "command": "-workbench.action.reloadWindow",
        "when": "isDevelopment" // Sic.
    },
    { // Remove competing shortcut
        "key": "ctrl+shift+r",
        "command": "-editor.action.refactor",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
    },

    { // Custom
        "key": "ctrl+d",
        "command": "editor.action.copyLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    { // Remove default shortcut (windows)
        "key": "shift+alt+up",
        "command": "-editor.action.copyLinesUpAction",
    },
    { // Remove default shortcut (linux)
        "key": "ctrl+shift+alt+up",
        "command": "-editor.action.copyLinesUpAction",
    },
    { // Remove related default shortcut (windows)
        "key": "shift+alt+down",
        "command": "-editor.action.copyLinesDownAction",
    },
    { // Remove related default shortcut (linux)
        "key": "ctrl+shift+alt+down",
        "command": "-editor.action.copyLinesDownAction",
    },

    { // Custom (matches one of the default ones on linux)
        "key": "shift+alt+up",
        "command": "editor.action.insertCursorAbove",
        "when": "editorTextFocus"
    },
    { // Remove default shortcut (windows)
        "key": "ctrl+alt+up",
        "command": "-editor.action.insertCursorAbove",
    },
    { // Remove default shortcut (linux 1/2)
        "key": "ctrl+shift+up",
        "command": "-editor.action.insertCursorAbove",
    },
    { // Remove default shortcut (linux 2/2, matches the custom one)
        "key": "shift+alt+up",
        "command": "-editor.action.insertCursorAbove",
    },

    { // Custom (matches one of the default ones on linux)
        "key": "shift+alt+down",
        "command": "editor.action.insertCursorBelow",
        "when": "editorTextFocus"
    },
    { // Remove default shortcut (windows)
        "key": "ctrl+alt+down",
        "command": "-editor.action.insertCursorBelow",
    },
    { // Remove default shortcut (linux 1/2)
        "key": "ctrl+shift+down",
        "command": "-editor.action.insertCursorBelow",
    },
    { // Remove default shortcut (linux 2/2, matches the custom one)
        "key": "shift+alt+down",
        "command": "-editor.action.insertCursorBelow",
    },

    { // Custom
        "key": "alt+f",
        "command": "editor.action.peekDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    { // Remove default shortcut (windows)
        "key": "alt+f12",
        "command": "-editor.action.peekDefinition",
    },
    { // Remove default shortcut (linux)
        "key": "ctrl+shift+f10",
        "command": "-editor.action.peekDefinition",
    },

    { // Custom
        "key": "shift+alt+f",
        "command": "editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus"
    },
    { // Remove default shortcut
        "key": "f12",
        "command": "-editor.action.revealDefinition",
    },
    { // Remove competing shortcut (windows)
        "key": "shift+alt+f",
        "command": "-editor.action.formatDocument",
    },
    { // Remove competing shortcut
        "key": "shift+alt+f",
        "command": "-filesExplorer.findInFolder",
    },

    { // Custom
        "key": "alt+d",
        "command": "editor.action.peekDeclaration",
        "when": "editorTextFocus"
    },

    { // Custom
        "key": "shift+alt+d",
        "command": "editor.action.revealDeclaration"
    },
    { // Remove competing shortcut (linux, windows NOT TESTED)
        "key": "shift+alt+d",
        "command": "-editor.detectLanguage",
    },

    { // Custom
        "key": "alt+r",
        "command": "editor.action.referenceSearch.trigger",
        "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor"
    },
    { // Remove default shortcut
        "key": "shift+f12",
        "command": "-editor.action.referenceSearch.trigger",
    },

    { // Custom
        "key": "shift+alt+r",
        "command": "references-view.find",
        "when": "editorHasReferenceProvider && editorTextFocus"
    },
    { // Remove default shortcut
        "key": "shift+alt+f12",
        "command": "-references-view.find",
    },
    { // Remove competing shortcut (windows)
        "key": "shift+alt+r",
        "command": "-revealFileInOS",
        "when": "!editorFocus"
    },

    { // Custom
        "key": "shift+alt+a",
        "command": "editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    { // Remove default shortcut (linux, windows NOT TESTED)
        "key": "ctrl+shift+a",
        "command": "-editor.action.blockComment",
    },

    { // Custom
        "key": "ctrl+up",
        "command": "showPrevParameterHint",
        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    { // Remove default shortcut
        "key": "up",
        "command": "-showPrevParameterHint",
    },
    { // Remove default shortcut (windows)
        "key": "alt+up",
        "command": "-showPrevParameterHint",
    },

    { // Custom
        "key": "ctrl+down",
        "command": "showNextParameterHint",
        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    { // Remove default shortcut
        "key": "down",
        "command": "-showNextParameterHint",
    },
    { // Remove default shortcut (windows)
        "key": "alt+down",
        "command": "-showNextParameterHint",
    },

    { // Remove default shortcut
        "key": "ctrl+up",
        "command": "-selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },

    { // Remove default shortcut
        "key": "ctrl+down",
        "command": "-selectNextSuggestion",
    },

    { // Custom
        "key": "alt+` f",
        "command": "editor.action.formatSelection",
        "when": "editorHasDocumentSelectionFormattingProvider && editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
    },
    { // Remove default shortcut
        "key": "ctrl+k ctrl+f",
        "command": "-editor.action.formatSelection",
    },

    { // Custom
        "key": "ctrl+b",
        "command": "editor.action.jumpToBracket",
        "when": "editorTextFocus"
    },
    { // Remove default shortcut
        "key": "ctrl+shift+\\",
        "command": "-editor.action.jumpToBracket",
    },

    { // Custom
        "key": "ctrl+shift+b",
        "command": "editor.action.selectToBracket",
        "when": "editorTextFocus"
    },
    { // Remove default shortcut
        "key": "ctrl+shift+b",
        "command": "-workbench.action.tasks.build"
    },

    { // Custom
        "key": "alt+` f1",
        "command": "workbench.actions.view.problems"
    },
    { // Remove default shortcut
        "key": "ctrl+shift+m",
        "command": "-workbench.actions.view.problems"
    },

    { // Custom
        "key": "alt+` f2",
        "command": "workbench.action.output.toggleOutput"
    },
    { // Remove default shortcut (windows)
        "key": "ctrl+shift+u",
        "command": "-workbench.action.output.toggleOutput"
    },
    { // Remove default shortcut (linux)
        "key": "ctrl+k ctrl+h",
        "command": "-workbench.action.output.toggleOutput"
    },

    { // Custom
        "key": "alt+` f3",
        "command": "workbench.debug.action.toggleRepl"
    },
    { // Remove default shortcut
        "key": "ctrl+shift+y",
        "command": "-workbench.debug.action.toggleRepl"
    },

    { // Custom
        "key": "alt+` f4",
        "command": "workbench.action.terminal.toggleTerminal"
    },
    { // Remove default shortcut
        "key": "ctrl+`",
        "command": "-workbench.action.terminal.toggleTerminal"
    },

    { // Custom
        "key": "shift+enter",
        "command": "editor.action.quickFix",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
    },
    { // Remove default shortcut
        "key": "ctrl+.",
        "command": "-editor.action.quickFix",
    },

    { // Custom
        "key": "ctrl+shift+down",
        "command": "editor.action.marker.next",
        "when": "editorTextFocus && !editorReadonly"
    },
    { // Remove default shortcut
        "key": "alt+f8",
        "command": "-editor.action.marker.next",
    },
    { // Remove competing shortcut
        "key": "ctrl+shift+down",
        "command": "-cursorDownSelect",
    },

    { // Custom
        "key": "ctrl+shift+up",
        "command": "editor.action.marker.prev",
        "when": "editorTextFocus && !editorReadonly"
    },
    { // Remove default shortcut
        "key": "shift+alt+f8",
        "command": "-editor.action.marker.prev",
        "when": "editorTextFocus && !editorReadonly"
    },
    { // Remove competing shortcut
        "key": "ctrl+shift+up",
        "command": "-cursorUpSelect",
    },

    { // Custom
        "key": "alt+` tab",
        "command": "workbench.action.toggleMaximizedPanel"
    },

    { // Custom
        "key": "alt+` pagedown",
        "command": "editor.action.sortLinesAscending"
    },

    { // Custom
        "key": "alt+` pageup",
        "command": "editor.action.sortLinesDescending"
    },

    { // Custom
        "key": "alt+` space",
        "command": "yo1dog.cursor-align.alignCursors",
        "when": "editorHasMultipleSelections && textInputFocus"
    },
    { // Remove default shortcut
        "key": "alt+a",
        "command": "-yo1dog.cursor-align.alignCursors",
    },

    { // Custom
        "key": "shift+alt+`",
        "command": "workbench.action.focusActiveEditorGroup"
    },

    { // Custom (linux)
        "key": "alt+left",
        "command": "workbench.action.navigateBack"
    },
    { // Remove default shortcut (linux)
        "key": "ctrl+alt+-",
        "command": "-workbench.action.navigateBack"
    },

    { // Custom (linux)
        "key": "alt+right",
        "command": "workbench.action.navigateForward"
    },
    { // Remove default shortcut (linux)
        "key": "ctrl+shift+-",
        "command": "-workbench.action.navigateForward"
    },

    { // Custom
        "key": "f4",
        "command": "clangd.switchheadersource",
        "when": "editorTextFocus"
    },
    { // Remove default shortcut (linux, windows NOT TESTED)
        "key": "alt+o",
        "command": "-clangd.switchheadersource",
    },

    { // Custom
        "key": "ctrl+alt+z",
        "command": "cursorUndo",
        "when": "textInputFocus"
    },
    { // Remove default shortcut (linux, windows NOT TESTED)
        "key": "ctrl+u",
        "command": "-cursorUndo",
    },

    { // Custom.
        "key": "f6",
        "command": "editor.debug.action.runToCursor",
        "when": "debugState == 'stopped'"
    },
    { // Remove competing shortcut (linux, windows NOT TESTED)
        "key": "f6",
        "command": "-workbench.action.debug.pause",
    },
]
